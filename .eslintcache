[{"/Users/nicolestellatos/notencode/src/index.tsx":"1","/Users/nicolestellatos/notencode/src/plugins/fetch-plugin.ts":"2","/Users/nicolestellatos/notencode/src/plugins/unpkg-path-plugin.ts":"3","/Users/nicolestellatos/notencode/src/components/code-editor.tsx":"4"},{"size":2163,"mtime":1650479353272,"results":"5","hashOfConfig":"6"},{"size":1628,"mtime":1650408360632,"results":"7","hashOfConfig":"6"},{"size":749,"mtime":1650404089472,"results":"8","hashOfConfig":"6"},{"size":2015,"mtime":1650479319834,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"166bczr",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicolestellatos/notencode/src/index.tsx",["19","20"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport * as esbuild from 'esbuild-wasm';\nimport { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport CodeEditor from './components/code-editor';\n\nconst App = () => {\n\tconst ref = useRef<any>();\n\tconst iframe = useRef<any>();\n\tconst [input, setInput] = useState('');\n\tconst [code, setCode] = useState('');\n\n\tconst startService = async () => {\n\t\tref.current = await esbuild.startService({\n\t\t\tworker: true,\n\t\t\twasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\tstartService();\n\t}, []);\n\n\tconst onClick = async () => {\n\t\tif (!ref.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tiframe.current.srcdoc = html;\n\n\t\tconst result = await ref.current.build({\n\t\t\tentryPoints: ['index.js'],\n\t\t\tbundle: true,\n\t\t\twrite: false,\n\t\t\tplugins: [unpkgPathPlugin(), fetchPlugin(input)],\n\t\t\tdefine: {\n\t\t\t\t'process.env.NODE_ENV': '\"production\"',\n\t\t\t\tglobal: 'window',\n\t\t\t},\n\t\t});\n\n\t\t// setCode(result.outputFiles[0].text);\n\t\tiframe.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n\t};\n\n\tconst html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err) {\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n              console.error(err);\n            }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\n\treturn (\n\t\t<div>\n\t\t\t<CodeEditor\n\t\t\t\tinitialValue=\"const a = 1;\"\n\t\t\t\tonChange={(value) => setInput(value)}\n\t\t\t/>\n\t\t\t<textarea\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t></textarea>\n\t\t\t<div>\n\t\t\t\t<button onClick={onClick}>Submit</button>\n\t\t\t</div>\n\t\t\t<pre>{code}</pre>\n\t\t\t<iframe ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\n\t\t</div>\n\t);\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","/Users/nicolestellatos/notencode/src/plugins/fetch-plugin.ts",[],"/Users/nicolestellatos/notencode/src/plugins/unpkg-path-plugin.ts",[],"/Users/nicolestellatos/notencode/src/components/code-editor.tsx",[],{"ruleId":"21","severity":1,"message":"22","line":13,"column":15,"nodeType":"23","messageId":"24","endLine":13,"endColumn":22},{"ruleId":"25","severity":1,"message":"26","line":81,"column":4,"nodeType":"27","endLine":81,"endColumn":65},"@typescript-eslint/no-unused-vars","'setCode' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement"]